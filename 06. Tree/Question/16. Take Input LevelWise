import java.util.Queue;
import java.util.LinkedList;
public static Tree<Integer> takeinputLevelWise(){
        Scanner s= new Scanner(System.in);
        int rootData= s.nextInt();

        if(rootData==-1) return null;

        Tree<Integer> root= new Tree<Integer>(rootData);
        Queue<Tree<Integer>> pendingChildren= new LinkedList<Tree<Integer>>();
        pendingChildren.add(root);

        while(!pendingChildren.isEmpty()){
            Tree<Integer> front= pendingChildren.poll();
            System.out.println("Enter left child of "+ front.data);
            int left= s.nextInt();
            if(left!=-1){
                    Tree<Integer> leftChild= new Tree<Integer>(left);
                    front.left= leftChild;
                    pendingChildren.add(leftChild)
            }

            System.out.println("Enter right child of "+ front.data);
            int right= s.nextInt();
            if(right!=-1){
                    Tree<Integer> rightChild= new Tree<Integer>(right);
                    front.right= rightChild;
                    pendingChildren.add(rightChild)
            }
        }
        return root;
    }