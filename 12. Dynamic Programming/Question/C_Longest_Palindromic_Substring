class Solution {
    public String longestPalindrome(String s) {
        int n=s.length();
        String ans ="";
        boolean dp[][] =new boolean[n][n];

        for(int g=0;g<n;g++){  // g represent gap between first and last Element
            for(int i=0,j=g;j<n;i++,j++){
                if(g==0) {
                    // One Char's String  , always palindrome
                    dp[i][j]=true;
                    ans=s.substring(i,j+1);
                } 
                else if(g==1){
                    //Two chars' String
                    if(s.charAt(i)==s.charAt(j)){
                        dp[i][j]=true;
                        ans=s.substring(i,j+1);
                    }
                } 
                else if(s.charAt(i)==s.charAt(j) && dp[i+1][j-1]){
                    // More Than One
                    dp[i][j]=true;
                    ans=s.substring(i,j+1);
                }  
            }
        }
        return ans;

    }
}