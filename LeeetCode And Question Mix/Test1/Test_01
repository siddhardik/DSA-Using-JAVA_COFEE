// 1. Print PAttern 
public class Solution {

	/* Input
	 * n - number of rows */
	public static void printPattern(int n){

		// Write your code here
		int arr[][]=new int[n][n];
		int count=1;
		for(int i=0;i<n/2;i++){
			for(int j=0;j<n;j++){
                  arr[i][j]=count;
				  count++;
			}
			if(i == n-i-1){
				break;
			}

			for(int e=0;e<n;e++){
				arr[n-i-1][e]=count;
				count++;
			}
		}

		if(n%2==1){
			// When n is odd
			int mid=n/2;
            for(int i=0;i<n;i++){
                 arr[mid][i]=count;
				count++;
			}
		}

		// Print
		for(int i=0;i<n;i++){
			for(int j=0;j<n;j++){
				System.out.print(arr[i][j]+" ");
			}
			System.out.println();
		}

	}
	
}




// 02.Print Matrix Diagonally 

public class solution {
    public static void matrixDiagonally(int[][] mat) {
         if(mat.length == 0 || mat[0].length == 0) return;

       int m = mat.length;
       int n = mat[0].length;
       int []arr = new int[m*n]; // made an empty array to return the ans.
       
       int i = 0 ;
       int rows = 0 ;
       int cols = 0 ;
       boolean up = true; // as there are 2 directions one up other down
       
       while(rows<m && cols<n){
           //if diagonal is going upwards
           if(up){
               while(rows>0 && cols<n-1){
                //    arr[i++] = mat[rows][cols];
                System.out.print(mat[rows][cols] +" ");
                   rows--;
                   cols++;
               }
        //    arr[i++]=mat[rows][cols];
        System.out.print(mat[rows][cols] +" ");
           if(cols == n-1){
               rows++;
           }
           else{
               cols++;
           }
           }
           else{
               while(cols>0 && rows<m-1){
                //    arr[i++] = mat[rows][cols];
                System.out.print(mat[rows][cols] +" ");
                   rows++;
                   cols--;
               }
            //    arr[i++] = mat[rows][cols];
            System.out.print(mat[rows][cols] +" ");
               if(rows == m-1){
                   cols++;
               }
               else{
                   rows++;
               }
           }
           up=!up;
       }
    //    return arr;
    }

	public static void printInDiagonalForm(int[][] arr) {
      matrixDiagonally(arr);
    //   for(int i=0;i<ansArr.length;i++){
    //       System.out.print(ansArr[i]+" ");
    //   }
	}
}


// 03. Check PanGram 
import java.util.Scanner;

public class Solution {

	public static void ans(int n, String str) {
		String st=str.toLowerCase();
		int ch;
		int ansFlag=1;
		int letter[]=new int[26];
		for(int i=0;i<n;i++){
              ch= st.charAt(i)-'a';
			  letter[ch]=1;
		}

		for(int i=0;i<26;i++){
			if(letter[i]==0){
				// This letter is not present 
				ansFlag=0;
				System.out.println("NO");
				break;
				
			}
		}
		if(ansFlag==1){

		System.out.println("YES");
		}
	
	}

	

	
}



// 04. Two SubsString

public class Solution {

    public static void twoSubstrings(String s) {
        // Write your code here
        boolean f1=false,s1=false;
        int i;
        
        for(i=0;i<s.length()-1;i++)
        {
            if(s.charAt(i)=='A' && s.charAt(i+1)=='B')
            {
                i+=2;f1=true;
                break;
            }
        }
        
        for(int j=i;j<s.length()-1;j++)
        {
            if(s.charAt(j)=='B' && s.charAt(j+1)=='A')
            {
                s1=true;
                break;
            }
            
        }
        
        boolean f2=false,s2=false;
        for(i=0;i<s.length()-1;i++)
        {
            if(s.charAt(i)=='B' && s.charAt(i+1)=='A')
            {
                i+=2;s2=true;
                break;
            }
        }
        
        for(int j=i;j<s.length()-1;j++)
        {
            if(s.charAt(j)=='A' && s.charAt(j+1)=='B')
            {
                f2=true;
                break;
            }
        }
        
        //System.out.println(f1+" "+s1+" "+f2+" "+s2);
        
        if((f1 && s1) || (f2 && s2))
            System.out.println("YES");
        else
            System.out.println("NO");
    }
}

